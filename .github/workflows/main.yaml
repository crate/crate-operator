name: CI

on:
  pull_request:
    branches:
      - master

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip pre-commit
      - name: Restore pre-commit hooks from cache
        uses: actions/cache@v1
        id: restore-pre-commit-hooks
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            pre-commit-
      - name: Install pre-commit hooks
        if: steps.restore-pre-commit-hooks.outputs.cache-hit != 'true'
        run: |
          pre-commit install-hooks
      - name: Lint
        run: |
          pre-commit run --all-files

  docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install ".[docs]"
      - name: Generate and test API docs
        run: |
          make html
        env:
          SPHINXOPTS: "-n -v -W --keep-going"
        working-directory: ./docs

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        k8s_version:
          - v1.16.9-k3s1
          - v1.17.4-k3s1
          - v1.18.2-k3s1
    steps:
      - uses: debianmaster/actions-k3s@bd3f96a5e41d2fb2c64d8aa97853ce2ee4541658
        id: k3s
        with:
          version: ${{ matrix.k8s_version }}
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e .[testing]
      - name: Run tests
        run: |
          pytest -vvv --kube-config="${KUBECONFIG}" --kube-context="$(kubectl config current-context)"
